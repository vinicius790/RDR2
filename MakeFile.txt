TEXT	:=	0x926200000
DATA	:=	0x926300000

OBJCOPY	 :=	objcopy
ODIR	 :=	build
SDIR	 :=	source
IDIRS	 :=	-Iinclude
LDIRS	 :=	-Llib
CFLAGS	 :=	$(IDIRS) $(LDIRS) -O3 -s -w -std=gnu++11 -fno-builtin -nostartfiles -nostdlib -masm=intel -march=btver2 -mtune=btver2 -m64 -mabi=sysv -mcmodel=large -fpermissive -DTEXT_ADDRESS=$(TEXT) -DDATA_ADDRESS=$(DATA)
LFLAGS	 :=	-Xlinker -T linker.x -Wl,--build-id=none -Ttext=$(TEXT) -Tdata=$(DATA)
CFILES	 :=	$(wildcard $(SDIR)/*.cpp)
SFILES	 :=	$(wildcard $(SDIR)/*.s)
OBJS	 :=	$(patsubst $(SDIR)/%.cpp, $(ODIR)/%.o, $(CFILES)) $(patsubst $(SDIR)/%.s, $(ODIR)/%.o, $(SFILES))

TARGET = $(shell basename $(CURDIR)).bin

$(TARGET): $(ODIR) $(OBJS)
	@echo "Linking $@..."
	@gcc crt0.s $(ODIR)/*.o -o temp.t $(CFLAGS) $(LFLAGS)
	@echo "Creating binary $@..."
	$(OBJCOPY) -O binary temp.t $(TARGET)
	@rm -f temp.t
	@echo "$@ is ready!"

$(ODIR)/%.o: $(SDIR)/%.cpp
	@echo "Compiling $<..."
	@gcc -c -o $@ $< $(CFLAGS)

$(ODIR)/%.o: $(SDIR)/%.s
	@echo "Assembling $<..."
	@gcc -c -o $@ $< $(CFLAGS)

$(ODIR):
	@echo "Creating build directory: $(ODIR)..."
	@mkdir $@

.PHONY: clean

clean:
	@echo "Cleaning up..."
	@rm -f $(TARGET) $(ODIR)/*.o
